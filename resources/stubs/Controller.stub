<?php

namespace NAMESPACE;

use Exception;
use App\Helpers\ReportHelper;
use Framework\Routing\Controller;

class CLASSNAME extends Controller
{
    /**
     * index
     *
     * @return void
     */
    public function index()
	{
		$this->render('admin.RESOURCENAME.index', [
            'RESOURCENAME' => $this->model('RESOURCENAME')->select()->orderDesc('created_at')->paginate(20)
        ]);
	}

    /**
	 * new
	 * 
	 * @return void
	 */
    public function new()
	{
		$this->render('admin.RESOURCENAME.new');
	}
	
	/**
	 * edit
	 * 
	 * @param  int $id
	 * @return void
	 */
    public function edit(int $id)
	{
        try {
            $RESOURCENAME = $this->model('RESOURCENAME')->findOrFail('id', $id);
            $this->render('admin.RESOURCENAME.edit', compact('RESOURCENAME'));
        } catch (Exception $e) {
            $this->redirect('admin/resources/RESOURCENAME')->only();
        }
	}
	
	/**
	 * read
	 * 
	 * @param  int $id
	 * @return void
	 */
	public function read(int $id)
	{
        try {
            $RESOURCENAME = $this->model('RESOURCENAME')->findOrFail('id', $id);
            $this->render('admin.RESOURCENAME.read', compact('RESOURCENAME'));
        } catch (Exception $e) {
            $this->redirect('admin/resources/RESOURCENAME')->only();
        }
	}

	/**
	 * create
	 *
	 * @return void
	 */
    public function create()
	{
        $id = $this->model('RESOURCENAME')->insert($this->request->inputs());
		$this->redirect('admin/resources/RESOURCENAME/read', $id)->only();
	}
    
	/**
	 * update
	 *
     * @param  int $id
	 * @return void
	 */
	public function update(int $id)
	{
        $this->model('RESOURCENAME')->updateIfExists($id, $this->$request->inputs());
		$this->redirect('admin/resources/RESOURCENAME/read', $id)->only();
	}

	/**
	 * delete
	 *
     * @param  int|null $id
	 * @return void
	 */
	public function delete(?int $id = null)
	{
        if (!is_null($id)) {
            if (!$this->model('RESOURCENAME')->deleteIfExists($id)) {
                $this->back()->only();
			}

            $this->redirect('admin/resources/RESOURCENAME')->only();
		} else {
            $this->model('RESOURCENAME')->deleteBy('id', 'in', explode(',', $this->request->items));
		}
	}

	/**
	 * import
	 *
	 * @return void
	 */
    public function import()
	{
		$file = $this->request->files('file', ['csv']);

		if (!$file->isAllowed()) {
            $this->redirect('admin/resources/RESOURCENAME')->only();
		}

		if (!$file->isUploaded()) {
			$this->redirect('admin/resources/RESOURCENAME')->only();
		}

		ReportHelper::import($file->getTempFilename(), $this->model('RESOURCENAME'), [
			//
		]);

		$this->redirect('admin/resources/RESOURCENAME')->only();
	}
	
	/**
	 * export
	 *
	 * @return void
	 */
    public function export()
	{
        $RESOURCENAME = $this->model('RESOURCENAME')
            ->select()
            ->subQuery(function ($query) {
                if ($this->request->has('date_start') && $this->request->has('date_end')) {
                    $query->whereBetween('created_at', $this->request->date_start, $this->request->date_end);
                }
            })
            ->orderDesc('created_at')
            ->all();
        
        $filename = 'RESOURCENAME_' . date('Y_m_d') . '.' . $this->request->file_type;

		ReportHelper::export($filename, $RESOURCENAME, [
			//
		]);
	}
}
