<?php

namespace NAMESPACE;

use App\Helpers\Report;
use Framework\Http\Request;
use Framework\Routing\Controller;

class CLASSNAME extends Controller
{
    /**
     * index
     *
     * @return void
     */
    public function index()
	{
		$this->render('admin.RESOURCENAME.index', [
            'RESOURCENAME' => $this->model('RESOURCENAME')->select()->oldest()->paginate(20)
        ]);
	}

    /**
	 * new
	 * 
	 * @return void
	 */
    public function new()
	{
		$this->render('admin.RESOURCENAME.new');
	}
	
	/**
	 * edit
	 * 
	 * @param  int $id
	 * @return void
	 */
    public function edit(int $id)
	{
        $RESOURCENAME = $this->model('RESOURCENAME')->findSingleBy($id);
        $this->render('admin.RESOURCENAME.edit', compact('RESOURCENAME'));
	}
	
	/**
	 * read
	 * 
	 * @param  int $id
	 * @return void
	 */
	public function read(int $id)
	{
        $RESOURCENAME = $this->model('RESOURCENAME')->findSingleBy($id);
        $this->render('admin.RESOURCENAME.read', compact('RESOURCENAME'));
	}

	/**
	 * create
	 *
     * @param  \Framework\Http\Request $request
	 * @return void
	 */
    public function create(Request $request)
	{
        $id = $this->model('RESOURCENAME')->insert($request->inputs());
		redirect()->route('RESOURCENAME.read', $id)->only();
	}
    
	/**
	 * update
	 *
     * @param  \Framework\Http\Request $request
     * @param  int $id
	 * @return void
	 */
	public function update(Request $request, int $id)
	{
        $this->model('RESOURCENAME')->updateIfExists($id, $request->inputs());
		redirect()->route('RESOURCENAME.read', $id)->only();
	}

	/**
	 * delete
	 *
     * @param  \Framework\Http\Request $request
     * @param  int|null $id
	 * @return void
	 */
	public function delete(Request $request, ?int $id = null)
	{
        if (!is_null($id)) {
            if (!$this->model('RESOURCENAME')->deleteIfExists($id)) {
                redirect()->back()->only();
			}

            redirect()->route('RESOURCENAME.index')->only();
		} else {
            $this->model('RESOURCENAME')->deleteBy('id', 'in', explode(',', $request->items));
            response()->json(['redirect' => route('RESOURCENAME.index')]);
		}
	}

	/**
	 * export
	 *
     * @param  \Framework\Http\Request $request
	 * @return void
	 */
    public function export(Request $request)
	{
        $RESOURCENAME = $this->model('RESOURCENAME')
            ->select()
            ->subQuery(function($query) use ($request) {
                if (!$request->filled('date_start') && !$request->filled('date_end')) {
                    $query->whereBetween($request->date_start, $request->date_end);
                }
            })
            ->oldest()
            ->all();

        $filename = 'RESOURCENAME_' . date('Y_m_d_His') . '.' . $request->file_type;

		Report::generate($filename, $RESOURCENAME, [
			//
		]);
	}
}
